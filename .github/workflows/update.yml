name: Update NUR-search
on:
  repository_dispatch:
    types:
      - nur_update
  workflow_dispatch:
  push:
    branches:
      - main
concurrency:
  group: update
  cancel-in-progress: false
permissions: # Required for GH actions
  contents: read
  pages: write
  id-token: write
jobs:
  update_search:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || !endsWith(github.actor, '[bot]')
    steps:
    - id: get_workflow_token
      uses: peter-murray/workflow-application-token-action@v4.0.1
      with:
        application_id: '${{ secrets.GH_APPLICATION_ID }}'
        application_private_key: '${{ secrets.GH_APPLICATION_PRIVATE_KEY }}'
        permissions: "contents:write"
        revoke_token: true
    - uses: actions/checkout@v4
      with:
        repository: nix-community/NUR
    - uses: actions/checkout@v4
      with:
        repository: nix-community/nur-combined
        submodules: 'recursive'
        path: nur-combined
    - uses: actions/checkout@v4
      with:
        repository: nix-community/nur-search
        path: nur-search
    - uses: cachix/install-nix-action@v30
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    - name: update nur-search/data/packages.json
      run: ./ci/update-nur-search.sh
      env:
        API_TOKEN_GITHUB: '${{ steps.get_workflow_token.outputs.token }}'
    - name: rebase # TODO: fix upstream push-protected to retry when push fails
      run: |
        source ./ci/lib/setup-git.sh
        git -C $GITHUB_WORKSPACE/nur-search fetch origin ${{ github.event.repository.default_branch }}
        git -C $GITHUB_WORKSPACE/nur-search pull --rebase origin ${{ github.event.repository.default_branch }}
      env:
        GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
    - uses: CasperWA/push-protected@v2
      with:
        token: ${{ steps.get_workflow_token.outputs.token }}
        branch: ${{ github.event.repository.default_branch }}
        path: nur-search
  update_website:
    runs-on: ubuntu-latest
    needs: update_search
    steps:
      - uses: actions/checkout@v4
        with:
          repository: nix-community/nur-search
          submodules: true
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        # TODO: Use nix / flakes
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
        env:
          HUGO_VERSION: 0.128.0
      - name: Make website
        run: make all
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public
  deploy_website:
    runs-on: ubuntu-latest
    needs: update_website
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
